<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IApplicationStorage_NullOrWhitespaceSettingName" xml:space="preserve">
    <value>An application setting name must be provided. Null, empty or whitespace only names are not allowed.</value>
  </data>
  <data name="IAuthenticationBroker_AuthenticationCanceled" xml:space="preserve">
    <value>Authentication was cancelled by the user.</value>
  </data>
  <data name="IAuthenticationBroker_AuthenticationFailed" xml:space="preserve">
    <value>Authentication failed with HTTP response code {0}.</value>
  </data>
  <data name="MobileServiceClient_EmptyArgument" xml:space="preserve">
    <value>{0} cannot be null, empty or only whitespace.</value>
  </data>
  <data name="MobileServiceClient_ErrorMessage" xml:space="preserve">
    <value>The request could not be completed.  ({0})</value>
  </data>
  <data name="IAuthenticationBroker_InvalidLoginResponse" xml:space="preserve">
    <value>Invalid format of the authentication response.</value>
  </data>
  <data name="MobileServicesAuthentication_LoginAlreadyInProgress" xml:space="preserve">
    <value>Cannot start a login operation because login is already in progress.</value>
  </data>
  <data name="IAuthenticationBroker_LoginFailed" xml:space="preserve">
    <value>Login failed: {0}</value>
  </data>
  <data name="MobileServiceTableUrlBuilder_InvalidParameterBeginsWithDollarSign" xml:space="preserve">
    <value>{0} is an invalid user-defined query string parameter. User-defined query string parameters must not begin with a \'$\'.</value>
  </data>
  <data name="MobileServiceTable_InsertWithExistingId" xml:space="preserve">
    <value>Cannot insert if the {0} member is already set.</value>
  </data>
  <data name="Platform_AssemblyDidNotHaveType" xml:space="preserve">
    <value>The assembly {0} does not define a type that implements the {1} interface.</value>
  </data>
  <data name="Platform_AssemblyNotFound" xml:space="preserve">
    <value>A Windows Azure Mobile Services assembly for the current platform was not found. Ensure that the current project references both {0} and the following platform-specific assembly: {1}.</value>
  </data>
  <data name="Platform_InstantiationFailed" xml:space="preserve">
    <value>Failed to instantiate the platform implemenation of {0} from the assembly {1} due to the following error: {2}</value>
  </data>
  <data name="FilterBuildingExpressionVisitor_MemberUnsupported" xml:space="preserve">
    <value>The member '{0}' is not supported in the 'Where' Mobile Services query expression '{1}'.</value>
  </data>
  <data name="FilterBuildingExpressionVisitor_OperatorUnsupported" xml:space="preserve">
    <value>The operator '{0}' is not supported in the 'Where' Mobile Services query expression '{1}'.</value>
  </data>
  <data name="FilterBuildingExpressionVisitor_UnsupportedInWhereExpression" xml:space="preserve">
    <value>'{0}' is not supported in a 'Where' Mobile Services query expression.</value>
  </data>
  <data name="MobileServiceTableQueryTranslator_SingleIntegerOnly" xml:space="preserve">
    <value>'{0}' Mobile Services query expressions must consist of a single integer, not '{1}'.</value>
  </data>
  <data name="MobileServiceTableQueryTranslator_MembersOnlyInExpression" xml:space="preserve">
    <value>'{0}' Mobile Services query expressions must consist of members only, not '{1}'.</value>
  </data>
  <data name="MobileServiceTableQueryTranslator_UnsupportedExpression" xml:space="preserve">
    <value>Expression '{1}' is not a supported '{0}' Mobile Services query expression.</value>
  </data>
  <data name="MobileServiceTableSerializer_CannotDeserializeValue" xml:space="preserve">
    <value>Cannot deserialize value {0} into '{1}.{2}'.</value>
  </data>
  <data name="MobileServiceTableSerializer_MissingRequiredMember" xml:space="preserve">
    <value>Cannot deserialize type '{0}' because the JSON object did not have required member(s) '{1}'.</value>
  </data>
  <data name="MobileServiceTableSerializer_NeedObject" xml:space="preserve">
    <value>Expected a JSON object to deserialize, not '{0}'.</value>
  </data>
  <data name="MobileServiceTableSerializer_UnknownType" xml:space="preserve">
    <value>Cannot serialize member '{0}' of type '{1}' declared on type '{2}'.</value>
  </data>
  <data name="MobileServiceTable_ExpectedArray" xml:space="preserve">
    <value>Could not get an array from response {0}.</value>
  </data>
  <data name="MobileServiceTable_NotSingleObject" xml:space="preserve">
    <value>Could not get object from response {0}.</value>
  </data>
  <data name="MobileServiceContractResolver_MemberNotFound" xml:space="preserve">
    <value>No '{0}' member found on type '{1}'.</value>
  </data>
  <data name="MobileServiceContractResolver_SamePropertyName" xml:space="preserve">
    <value>Only one member may have the property name '{0}' (regardless of casing) on type '{1}'.</value>
  </data>
  <data name="MobileServiceContractResolver_TypeWithDataMemberButNoDataContract" xml:space="preserve">
    <value>The type '{0}' has one or members with a DataMemberAttribute, but the type itself does not have a DataContractAttribute. Use the Newtonsoft.Json.JsonPropertyAttribute in place of the DataMemberAttribute and set the PropertyName to the desired name.</value>
  </data>
  <data name="MobileServiceTable_IdNotFound" xml:space="preserve">
    <value>Expected {0} member not found.</value>
  </data>
  <data name="MobileServiceContractResolver_NumberOutOfRange" xml:space="preserve">
    <value>The value {0} for member {1} is outside the valid range for numeric columns.</value>
  </data>
  <data name="MobileServiceContractResolver_TypeNoDataContractButBaseWithDataContract" xml:space="preserve">
    <value>The type '{0}' does not have a DataContractAttribute, but the type derives from the type '{1}', which does have a DataContractAttribute. If a type has a DataContractAttribute, any type that derives from that type must also have a DataContractAttribute.</value>
  </data>
  <data name="ExpressionUtility_ProjectionNotSupportedOnWindowsPhone75" xml:space="preserve">
    <value>The Linq IQueryable Select() operation is not supported on the Windows Phone 7.5 platform.</value>
  </data>
  <data name="MobileServiceClient_NoResponseContent" xml:space="preserve">
    <value>The server did not provide a response with the expected content.</value>
  </data>
  <data name="MobileServiceJsonSerializerSettings_NullOrInvalidContractResolver" xml:space="preserve">
    <value>The member '{0}.ContractResolver' must be set to an instance of the '{1}' class or a class that inherits from the '{1}' class.</value>
  </data>
  <data name="Platform_AssemblyDoesNotSupportLogin" xml:space="preserve">
    <value>Third-party provider authentication requires user interface components and is not supported with the platform-specific assembly {0}. To authenticate users with a third-party provider, ensure that the project references the platform-specific UI assembly {0}.UI.</value>
  </data>
  <data name="MobileServicePrecisionCheckConverter_ReadNotSupported" xml:space="preserve">
    <value>The {0} does not support reading JSON.</value>
  </data>
  <data name="MobileServiceTable_DeleteWithoutId" xml:space="preserve">
    <value>Cannot delete if the {0} member is set to a default value.</value>
  </data>
  <data name="MobileServiceTable_UpdateWithoutId" xml:space="preserve">
    <value>Cannot update if the {0} member is set to a default value.</value>
  </data>
  <data name="MobileServiceClient_InnerHandlerMustBeNull" xml:space="preserve">
    <value>The 'InnerHandler' property of the delegating handler must be null.</value>
  </data>
  <data name="HttpMessageHandlerExtensions_WrongHandlerType" xml:space="preserve">
    <value>All message handlers except the last must be of the type '{0}'</value>
  </data>
</root>